import argparse
import logging
import re


logger = logging.getLogger(__name__)


def main():
    validation_perplexities = []
    validation_accuracies = []

    # Read the log file and add the test results to rnn_lm_test_metrics
    with open(args.log_path) as log_file:
        for line in log_file:
            if ((("valid ppl" in line) and (not args.adversarial)) or
                    (("adversarial ppl" in line) and (args.adversarial))):
                regex = r"\d+.\d+$"
                validation_ppl = list(re.finditer(regex, line))[-1].group()
                validation_perplexities.append(validation_ppl)
            elif ((("validation accuracy" in line) and
                   (not args.adversarial)) or
                    (("adversarial test accuracy" in line) and
                     (args.adversarial))):
                regex = r"\d+.\d+$"
                validation_accuracy = list(
                    re.finditer(regex, line))[-1].group()
                validation_accuracies.append(validation_accuracy)
            elif "End of training" in line:
                break
    for idx, (ppl, acc) in enumerate(zip(validation_perplexities,
                                         validation_accuracies)):
        print("{}\t{}\t{}".format(idx + 1, ppl, acc))


if __name__ == "__main__":
    logging.basicConfig(format="%(asctime)s - %(levelname)s "
                        "- %(name)s - %(message)s",
                        level=logging.INFO)
    # Path to directory that this file is in
    parser = argparse.ArgumentParser(
        description=("Print validation statistics for a single run of the "
                     "history prediction model. Useful for visualizing how "
                     "task and adversarial perplexity and accuracy differ "
                     "over time."))
    parser.add_argument("--log-path", required=True,
                        help="Path to log file.")
    parser.add_argument("--adversarial",
                        help=("Print the adversarial scores "
                              "instead of the task scores."),
                        action="store_true")

    args = parser.parse_args()
    main()
